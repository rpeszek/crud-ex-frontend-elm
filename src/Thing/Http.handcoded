{-
 Explicit (hand-coded) version of Http 'Thing' interface
-}
module Thing.Http exposing (..)

import Http
import Task
import Json.Decode       as Json
import Util.Http         as HttpS
import Util.Http.Methods as HttpS
import Thing.Model       as Model
import ServerRoutes exposing (..)

getThing : Model.ThingId -> Cmd (HttpS.HttpRes HttpS.HttpGET (Maybe Model.Thing))
getThing tId =
  let
    errMsg = "Error Retrieving Thing " ++ toString tId
    request =
      Http.get (thingR tId) (Json.maybe Model.thingJsonDecoder)  
  in
    Http.send (HttpS.resultConverter HttpS.HttpGET errMsg) request

getThings :  Cmd (HttpS.HttpRes HttpS.HttpGET (List Model.ThingEntity))
getThings  =
  let
    errMsg = "Error Retrieving Things " 
    request =
      Http.get thingsR (Json.list Model.thingEntityJsonDecoder)  
  in
    Http.send (HttpS.resultConverter HttpS.HttpGET errMsg) request

putThing : Model.ThingId -> Model.Thing -> Cmd (HttpS.HttpRes HttpS.HttpPUT Model.Thing)
putThing tId thing =
  let
    errMsg = "Error Saving Thing " ++ toString tId ++ ": " ++ toString thing
    request =
      HttpS.put (thingR tId) (Model.thingJsonEncoder thing) Model.thingJsonDecoder
  in
    Http.send (HttpS.resultConverter HttpS.HttpPUT errMsg) request

postThing : Model.Thing -> Cmd (HttpS.HttpRes HttpS.HttpPOST Model.ThingEntity)
postThing thing =
  let
    errMsg = "Error Creating Thing " ++ toString thing
    request =
      HttpS.post thingsR (Model.thingJsonEncoder thing) Model.thingEntityJsonDecoder
  in
    Http.send (HttpS.resultConverter HttpS.HttpPOST errMsg) request

deleteThing : Model.ThingId -> Cmd (HttpS.HttpRes HttpS.HttpDELETE ())
deleteThing tId = 
  let
    errMsg = "Error Deleting Thing " ++ toString tId
    request =
      HttpS.delete (thingR tId)
  in
    Http.send (HttpS.resultConverter HttpS.HttpDELETE errMsg) request
